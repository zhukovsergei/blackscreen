name: Production

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.prod
          no-cache: true
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/blackscreen-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/blackscreen-app:${{ github.sha }}

      - name: Deploy to Vultr
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VULTR_HOST }}
          username: ${{ secrets.VULTR_USERNAME }}
          key: ${{ secrets.VULTR_SSH_KEY }}
          script: |
            mkdir -p /opt/blackscreen
            
            cat > /opt/blackscreen/.env << EOL
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }}
            DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}
            EOL
            
            cat > /opt/blackscreen/docker-compose.yml << 'EOL'
            $(cat docker-compose.traefik.yml)
            EOL
            
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin || {
              echo "Login error to Docker Hub"
              exit 1
            }

            cd /opt/blackscreen || {
              echo "no blackscreen folder"
              exit 1
            }
            
            docker compose down --remove-orphans || true
            
            echo "Remove old images"
            docker rmi -f ${{ secrets.DOCKERHUB_USERNAME }}/blackscreen-app:latest || true
            
            docker compose pull || {
              echo "docker pull error"
              exit 1
            }
            
            docker compose --env-file .env up -d --force-recreate || {
              echo "Error on docker up"
              exit 1
            }
            
            docker ps | grep blackscreen-prod || {
              echo "blackscreen-prod is not up"
              docker compose logs
              exit 1
            }
            
            docker image prune -af